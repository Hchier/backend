<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.mapper.TeamMapper">
    <resultMap id="BaseResultMap" type="com.platform.entity.Team">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="member_ids" jdbcType="VARCHAR" property="memberIds"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="leader_id" jdbcType="VARCHAR" property="leaderId"/>
        <result column="committed" jdbcType="BIT" property="committed"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="project_path" jdbcType="VARCHAR" property="projectPath"/>
    </resultMap>
    <resultMap id="TeamInfoMTQOBaseResultMap" type="com.platform.mtqo.TeamInfoMTQO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="member_ids" property="memberIds" jdbcType="VARCHAR"/>
        <result column="project_name" property="projectName" jdbcType="VARCHAR"/>
        <result column="leader_id" property="leaderId" jdbcType="INTEGER"/>
        <result column="leader_username" property="leaderUsername" jdbcType="VARCHAR"/>
        <result column="leader_real_name" property="leaderRealName" jdbcType="VARCHAR"/>
        <result column="committed" property="committed" jdbcType="BIT"/>
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="project_path" property="projectPath" jdbcType="VARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from team
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.platform.entity.Team">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into team (`name`, member_ids, project_id,
        leader_id, teacher_id,
        project_path)
        values (#{name,jdbcType=VARCHAR}, #{memberIds,jdbcType=VARCHAR}, #{projectId,jdbcType=INTEGER},
        #{leaderId,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER},
        #{projectPath,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.platform.entity.Team">

        update team
        <set>
            <if test="name != null">`name` = #{name,jdbcType=VARCHAR},</if>
            <if test="memberIds != null">member_ids = #{memberIds,jdbcType=VARCHAR},</if>
            <if test="projectId != null">project_id = #{projectId,jdbcType=INTEGER},</if>
            <if test="teacherId != null">teacher_id = #{teacherId,jdbcType=INTEGER},</if>
            <if test="committed !=null">committed = #{committed},</if>
            <if test="projectPath != null">project_path = #{projectPath},</if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               `name`,
               member_ids,
               project_id,
               leader_id,
               `committed`,
               teacher_id,
               project_path
        from team
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               `name`,
               member_ids,
               project_id,
               leader_id,
               `committed`,
               teacher_id,
               project_path
        from team
    </select>
    <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select *
        from team
        where name = #{name}
    </select>
    <select id="selectMTQOByPrimary" resultMap="TeamInfoMTQOBaseResultMap" parameterType="java.lang.Integer">
        SELECT a.id           id,
               a.NAME         name,
               a.member_ids   member_ids,
               d.title        project_name,
               b.id           leader_id,
               b.username     leader_username,
               b.real_name    leader_real_name,
               a.COMMITTED    committed,
               c.id           teacher_id,
               c.real_name    teacher_name,
               a.project_path project_path
        FROM (SELECT * FROM team WHERE id = #{id}) a,
             (SELECT id, username, real_name FROM student) b,
             (SELECT id, real_name FROM teacher) c,
             (SELECT id, title FROM project) d
        WHERE a.leader_id = b.id
          AND a.teacher_id = c.id
          AND a.project_id = d.id
    </select>
    <select id="selectMemberIdsByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.String">
        select member_ids
        from team
        where id = #{id}
    </select>
    <select id="selectTeacherIdByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select teacher_id
        from team
        where id ={id}
    </select>

    <select id="selectMTQOByPrimaryLimit" resultMap="TeamInfoMTQOBaseResultMap" parameterType="java.lang.Integer">
        SELECT a.id           id,
               a.NAME         NAME,
               a.member_ids   member_ids,
               d.title        project_name,
               b.id           leader_id,
               b.username     leader_username,
               b.real_name    leader_real_name,
               a.COMMITTED    COMMITTED,
               c.id           teacher_id,
               c.real_name    teacher_name,
               a.project_path project_path
        FROM (SELECT * FROM team) a,
             (SELECT id, username, real_name FROM student) b,
             (SELECT id, real_name FROM teacher) c,
             (SELECT id, title FROM project) d
        WHERE a.leader_id = b.id
          AND a.teacher_id = c.id
          AND a.project_id = d.id
            LIMIT #{startIndex}
            , #{pageSize}
    </select>


    <select id="getTeamByProjectId" resultType="com.platform.vo.TeamAllInfoVO">



    </select>

    <select id="selectMTQOQuery" resultMap="TeamInfoMTQOBaseResultMap" parameterType="com.platform.mtqo.TeamInfoMTQO">
        SELECT
            *
        FROM
            (
                SELECT
                    a.id id,
                    a.NAME NAME,
                    a.member_ids member_ids,
                    d.title project_name,
                    b.id leader_id,
                    b.username leader_username,
                    b.real_name leader_real_name,
                    a.COMMITTED COMMITTED,
                    c.id teacher_id,
                    c.real_name teacher_name,
                    a.project_path project_path
                FROM
                        ( SELECT * FROM team ) a,
                        ( SELECT id, username, real_name FROM student ) b,
                        ( SELECT id, real_name FROM teacher ) c,
                        ( SELECT id, title FROM project ) d
                WHERE
                    a.leader_id = b.id
                  AND a.teacher_id = c.id
                  AND a.project_id = d.id
            ) e
        <where>
            <if test="id != null">e.id = #{id}</if>
            <if test="name != null">and e.name = #{name}</if>
            <if test="projectName != null">and e.project_name = #{projectName}</if>
            <if test="leaderId != null">and e.leader_id = #{leaderId}</if>
            <if test="leaderUsername != null">and e.leader_username = #{leaderUsername}</if>
            <if test="leaderRealName != null">and e.leader_real_name = #{leaderRealName}</if>
            <if test="committed != null">and e.COMMITTED = #{committed}</if>
            <if test="teacherId != null">and e.teacher_id = #{teacherId}</if>
            <if test="teacherName != null">and e.teacher_name = #{teacherName}</if>
        </where>

    </select>

</mapper>