<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.mapper.StudentMapper">
    <resultMap id="BaseResultMap" type="com.platform.entity.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="school_id" jdbcType="VARCHAR" property="schoolId"/>
        <result column="team_ids" jdbcType="VARCHAR" property="teamIds"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="avatar_path" jdbcType="VARCHAR" property="avatarPath"/>
    </resultMap>
    <resultMap id="StudentVOResultMap" type="com.platform.vo.StudentVO">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="school_name" jdbcType="VARCHAR" property="schoolName"/>
        <result column="team_ids" jdbcType="VARCHAR" property="teamIds"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="avatar_path" jdbcType="VARCHAR" property="avatarPath"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from student
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.platform.entity.Student">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into student (username, `password`, real_name,
        school_id, team_ids, tel,
        avatar_path)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR},
        #{schoolId,jdbcType=VARCHAR}, #{teamIds,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
        #{avatarPath,jdbcType=VARCHAR})
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.platform.entity.Student">
        update student
        <set>
            <if test="username !=null">username = #{username,jdbcType=VARCHAR},</if>
            <if test="password !=null">`password` = #{password,jdbcType=VARCHAR},</if>
            <if test="realName !=null">real_name = #{realName,jdbcType=VARCHAR},</if>
            <if test="schoolId !=null">school_id = #{schoolId,jdbcType=VARCHAR},</if>
            <if test="teamIds !=null">team_ids = #{teamIds,jdbcType=VARCHAR},</if>
            <if test="tel !=null">tel = #{tel,jdbcType=VARCHAR},</if>
            <if test="avatarPath !=null">avatar_path = #{avatarPath,jdbcType=VARCHAR}</if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,
               username,
               `password`,
               real_name,
               school_id,
               team_ids,
               tel,
               avatar_path
        from student
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               username,
               `password`,
               real_name,
               school_id,
               team_ids,
               tel,
               avatar_path
        from student
    </select>
    <select id="selectVOByUsername" resultMap="StudentVOResultMap">
        SELECT student.id          id,
               student.username,
               student.PASSWORD,
               student.real_name   real_name,
               school.`name`       school_name,
               student.team_ids    team_ids,
               student.tel         tel,
               student.avatar_path avatar_path
        FROM student
                 LEFT JOIN school ON student.school_id = school.id
        WHERE username = #{username}
    </select>
    <select id="selectPasswordByUsername" resultType="java.lang.String">
        select password
        from student
        where username = #{username}
    </select>
    <select id="selectTeamIdsByUsername" resultType="java.lang.String" parameterType="java.lang.String">
        select team_ids
        from student
        where username = #{username}
    </select>
    <select id="selectUsernameByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.String">
        select username
        from student
        where id = #{id}
    </select>
    <select id="selectRealNameByPrimaryKey" parameterType="java.lang.Integer" resultType="java.lang.String">
        select real_name
        from student
        where id = #{id}
    </select>

    <select id="selectVOsLimit" parameterType="java.lang.Integer" resultMap="StudentVOResultMap">
        SELECT student.id          id,
               student.username,
               student.PASSWORD,
               student.real_name   real_name,
               school.`name`       school_name,
               student.team_ids    team_ids,
               student.tel         tel,
               student.avatar_path avatar_path
        FROM student
                 LEFT JOIN school ON student.school_id = school.id
            LIMIT #{startIndex}
           , #{pageSize}
    </select>
    <select id="selectStudentsByIds" resultType="com.platform.entity.Student">
        SELECT *
        FROM student
        WHERE id IN ${ids}
    </select>

    <select id="selectVOsQuery" resultMap="StudentVOResultMap" parameterType="com.platform.vo.StudentVO">
        SELECT
        *
        FROM
        (
        SELECT
        student.id id,
        student.username,
        student.PASSWORD,
        student.real_name real_name,
        school.`name` school_name,
        student.team_ids team_ids,
        student.tel tel,
        student.avatar_path avatar_path
        FROM
        student
        LEFT JOIN school ON student.school_id = school.id
        ) e
        <where>
            <if test="id !=null">e.id = #{id}</if>
            <if test="username !=null">AND e.username = #{username}</if>
            <if test="password !=null">AND e.password = #{password}</if>
            <if test="realName !=null">AND e.real_name = #{realName}</if>
            <if test="schoolName !=null">AND e.school_name = #{schoolName}</if>
        </where>
        LIMIT #{startIndex}
        , #{pageSize}
    </select>
</mapper>